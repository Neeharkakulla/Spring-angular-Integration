{"version":3,"sources":["./src/app/supplierlogin/supplierlogin.component.ts","./src/app/supplierlogin/supplierlogin.component.html","./src/services/o2-supplier.service.ts","./src/app/doctorlogin/doctorlogin.component.ts","./src/app/doctorlogin/doctorlogin.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/services/user.service.ts","./src/app/doctor-dash-board/doctor-dash-board.component.html","./src/app/doctor-dash-board/doctor-dash-board.component.ts","./src/services/application-from.service.ts","./src/app/admin-dash-board/admin-dash-board.component.html","./src/app/admin-dash-board/admin-dash-board.component.ts","./src/services/doctor.service.ts","./src/app/user-dash-board/user-dash-board.component.ts","./src/app/user-dash-board/user-dash-board.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/services/image.service.ts","./src/app/app.module.ts","./src/app/suppliers-dash-board/suppliers-dash-board.component.html","./src/app/suppliers-dash-board/suppliers-dash-board.component.ts","./src/app/image-viewer/image-viewer.component.ts","./src/app/image-viewer/image-viewer.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/slideshow/slideshow.component.ts","./src/app/slideshow/slideshow.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SupplierDetails } from 'src/model/supplier-details';\nimport { O2SupplierService } from 'src/services/o2-supplier.service';\n\n@Component({\n  selector: 'app-supplierlogin',\n  templateUrl: './supplierlogin.component.html',\n  styleUrls: ['./supplierlogin.component.css']\n})\nexport class SupplierloginComponent implements OnInit {\n\n  admin:boolean=false;\n  showModal: boolean=true;\n  loginForm: FormGroup;\n  registerForm : FormGroup\n   submitted = false; \n   tLoginRegister = false;\n   log: string;\n   validate= true;\n    supplier:SupplierDetails;\n \n \n   constructor(private formBuilder: FormBuilder,\n     private router : Router,\n      private supplierService:O2SupplierService,) \n      { }\n   show()\n   {\n     this.showModal = true; \n   }\n   Logout(){\n\n     this.log = undefined\n   }\n \n \n   toggleLoginRegister(){\n    \n   \n     if(this.tLoginRegister==false){  \n       this.tLoginRegister = true;\n     }else{\n       this.tLoginRegister=false;\n     }\n  }\n \n   //Bootstrap Modal Close event\n   hide()\n   {\n     if(this.tLoginRegister==true)\n     this.toggleLoginRegister()\n    document.getElementById(\"supplierForm\").style.display=\"none\";\n   }\n   ngOnInit() {\n    this.showModal=true;\n    \n     this.registerForm = this.formBuilder.group({\n     \n       firstName: ['', [Validators.required, Validators.minLength(6)]],\n       lastName: ['', [Validators.required, Validators.minLength(6)]],\n       role:['supplier'],\n       email: ['', [Validators.required, Validators.email]],\n       password: ['', [Validators.required, Validators.minLength(4)]],\n       number: ['', [Validators.required, Validators.minLength(10),Validators.maxLength(10),Validators.pattern(\"^[0-9]*$\")]],\n       industryName:['',Validators.required],\n       city:['',Validators.required]\n    \n     });\n \n     this.loginForm = this.formBuilder.group({\n       \n      \n       email: ['supplier@supplier.com', [Validators.required, Validators.email]],\n       password: ['supplier', [Validators.required, Validators.minLength(4)]],\n       role:['supplier'],\n       \n     });\n }\n\n // convenience getter for easy access to form fields\n get f() { return this.loginForm.controls; }\n get r() { return this.registerForm.controls; }\n onSubmit() {\n     this.submitted = true;\n     if (this.loginForm.invalid) {\n       return;\n     }   \n     this.supplier=this.loginForm.value;\n     \n    \n     this.supplierService.validateUser(this.supplier).subscribe(data=>{\n      \n      if(data!=null)\n      {\n        this.supplierService.asupplier=data;\n     this.router.navigate(['/suppliersdashboard'])\n      }\n      else{\n        document.getElementById(\"supplierlogin\").innerHTML=\"<p color='red'> Invalid Credentials</p>\"\n      }\n     },err=>{\n       alert(err.name)\n     })\n    \n     \n    \n     \n }\n \n \n \n onRegister(){\n \n   this.submitted = true;\n     // stop here if form is invalid\n     if (this.registerForm.invalid) {\n         return;\n     }\n     \n     if(this.submitted)\n     {\n       this.showModal = false;\n     }\n    this.supplier=this.registerForm.value\n    \n    this.supplierService.registerUser(this.supplier).subscribe(data=>{\n      \n      if(data)\n      this.toggleLoginRegister();\n    },err=>{\n      alert(err.name)\n    });\n  } \n \n\n\n}\n","<div class=\"loginrow\">\n    <div class=\"logincol1\">\n\n    </div>\n    <div class=\"logincol2\">\n     <div class=\"modal-header\">\n        <div class=\"modal-dialog\">\n            \n        <div  *ngIf=\"tLoginRegister == false\"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">               <div class=\"modal-content\">\n               \n                <div class=\"modal-header\">\n                 \n                  <h4 class=\"modal-title\" id=\"myModalLabel\">Supplier Login</h4>\n                 \n                </div>\n                <div class=\"modal-body\">\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                        <div class=\"form-group\">\n                          \n                          <span style=\"color: red;\"id=\"supplierlogin\"></span>\n                            <label>Email</label>\n                            <input type=\"text\" formControlName=\"email\" class=\"form-control\" autofocus=\"true\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                \n                            </div>\n                            <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Email</span>\n                        </div>\n                        \n                        \n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                                \n                              </div>\n                              <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Password</span>\n                          </div>\n                          \n                      <div class=\"form-group form-check\">\n                        <label class=\"form-check-label\">\n                          <input class=\"form-check-input\" type=\"checkbox\" name=\"remember\"> Remember me\n                        </label>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;\n                      <button *ngIf=\"!admin\" (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Register</button>&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                    \n                    </form>\n                   \n                </div>\n              </div>\n            </div>\n           </div>\n                <div *ngIf=\"tLoginRegister == true \"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">\n                    \n                    <div class=\"modal-dialog\">\n                    \n                      <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel\">Supplier Registration</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\n        \n        \n                          <div class=\"form-group\">\n                            <label>FirstName</label>\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" autofocus=\"true\" [ngClass]=\"{ 'is-invalid': submitted && r.firstName.errors }\" />\n                            <div *ngIf=\"submitted && r.firstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.firstName.errors.required\">firstName is required</div>\n                                <div *ngIf=\"r.firstName.errors.minlength\">firstName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                          <div class=\"form-group\">\n                            <label>LastName</label>\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.lastName.errors }\" />\n                            <div *ngIf=\"submitted && r.lastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.lastName.errors.required\">lastName is required</div>\n                                <div *ngIf=\"r.lastName.errors.minlength\">lastName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                            <div class=\"form-group\">\n                                <label>Email</label>\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.email.errors }\" />\n                                <div *ngIf=\"submitted && r.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"r.email.errors.email\">Email must be a valid email address</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.password.errors }\" />\n                                <div *ngIf=\"submitted && r.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"r.password.errors.minlength\">Password must be at least 6 characters</div>\n                                </div>\n                              </div>\n        \n                              <div class=\"form-group\">\n                                <label>PhoneNumber</label>\n                                <input type=\"tel\" formControlName=\"number\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.number.errors }\" />\n                                <div *ngIf=\"submitted && r.number.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.number.errors.required\">phoneNumber is required</div>\n                                    <div *ngIf=\"r.number.errors.minlength\">phoneNumber must contain 10 characters</div>\n                                </div>\n                              </div>\n                              <div class=\"form-group\">\n                                <label>Industry Name</label>\n                                <input type=\"tel\" formControlName=\"industryName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.industryName.errors }\" />\n                                <div *ngIf=\"submitted && r.industryName.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.industryName.errors.required\">hospitalName is required</div>\n                                    <div *ngIf=\"r.industryName.errors.minlength\">hospitalName must contain 10 characters</div>\n                                </div>\n                              </div>\n                              \n                              <div class=\"form-group\">\n                                <label>Industry Address</label>\n                                <input type=\"text\" formControlName=\"city\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.city.errors }\" />\n                                <div *ngIf=\"submitted && r.city.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.city.errors.required\">city is required</div>\n                                    <div *ngIf=\"r.city.errors.minlength\">city must contain 10 characters</div>\n                                </div>\n                                </div>\n                          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>&nbsp;\n                          <button (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Login</button> &nbsp;\n                          <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                        </form>\n                        \n                  </div>\n                </div>\n                \n              </div>\n                   \n      </div>\n     \n    </div>\n    </div>\n    <div class=\"logincol3\">\n        \n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SupplierDetails } from 'src/model/supplier-details';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class O2SupplierService {\n  unBlockSupplier(supplier: SupplierDetails) {\n    return this.http.post<SupplierDetails[]>(this.baseUrl+\"/unblock\",supplier)\n\n  }\n \n  blockSupplier(supplier: SupplierDetails) {\n    return this.http.post<SupplierDetails[]>(this.baseUrl+\"/block\",supplier)\n  }\n  changePassword() {\n    return this.http.post(this.baseUrl+'/newpassword',this.asupplier);\n      }\n  validatepassword(oldPassword: any) {\n    return this.http.post<boolean>(this.baseUrl+\"/validate/\"+this.asupplier.email,oldPassword)\n  }\n  getAllSuppliers() {\n    return this.http.get<SupplierDetails[]>(this.baseUrl+\"/getAll\")\n  }\n  private baseUrl=\"http://localhost:8001/api/users/supplier\"\n  asupplier: SupplierDetails;\n  registerUser(supplier:SupplierDetails) {\n   return this.http.post(this.baseUrl+\"/register\",supplier)\n  }\n  validateUser(supplier: SupplierDetails) {\n    return this.http.post<SupplierDetails>(this.baseUrl+\"/login\",supplier)\n  }\n\n  constructor(private http:HttpClient) { }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DoctorDetails } from 'src/model/doctor-details';\nimport { DoctorService } from 'src/services/doctor.service';\n\n@Component({\n  selector: 'app-doctorlogin',\n  templateUrl: './doctorlogin.component.html',\n  styleUrls: ['./doctorlogin.component.css']\n})\nexport class DoctorloginComponent implements OnInit {\n\n  admin:boolean=false;\n  showModal: boolean=true;\n  loginForm: FormGroup;\n  registerForm : FormGroup\n   submitted = false; \n   tLoginRegister = false;\n   log: string;\n   validate= true;\n    doctor:DoctorDetails;\n \n \n   constructor(private formBuilder: FormBuilder,\n     private router : Router,\n      private doctorService:DoctorService,) \n      { }\n   show()\n   {\n     this.showModal = true; \n   }\n   Logout(){\n\n     this.log = undefined\n   }\n \n \n   toggleLoginRegister(){\n    \n   \n     if(this.tLoginRegister==false){  \n       this.tLoginRegister = true;\n     }else{\n       this.tLoginRegister=false;\n     }\n  }\n \n   //Bootstrap Modal Close event\n   hide()\n   {\n     if(this.tLoginRegister==true)\n     this.toggleLoginRegister()\n    document.getElementById(\"doctorForm\").style.display=\"none\";\n   }\n   ngOnInit() {\n    this.showModal=true;\n    \n     this.registerForm = this.formBuilder.group({\n     \n       firstName: ['', [Validators.required, Validators.minLength(6)]],\n       lastName: ['', [Validators.required, Validators.minLength(6)]],\n       role:['doctor'],\n       email: ['', [Validators.required, Validators.email]],\n       password: ['', [Validators.required, Validators.minLength(4)]],\n       number: ['', [Validators.required, Validators.minLength(10),Validators.maxLength(10),Validators.pattern(\"^[0-9]*$\")]],\n       hospitalName:['',Validators.required],\n       city:['',Validators.required]\n\n     });\n \n     this.loginForm = this.formBuilder.group({\n       \n      \n       email: ['doctor@doctor.com', [Validators.required, Validators.email]],\n       password: ['doctor', [Validators.required, Validators.minLength(4)]],\n       role:['doctor'],\n       \n     });\n }\n\n // convenience getter for easy access to form fields\n get f() { return this.loginForm.controls; }\n get r() { return this.registerForm.controls; }\n onSubmit() {\n     this.submitted = true;\n     if (this.loginForm.invalid) {\n       return;\n     }   \n     this.doctor=this.loginForm.value;\n     \n    \n     this.doctorService.validateUser(this.doctor).subscribe(data=>{\n     \n      if(data!=null)\n      {\n        this.doctorService.adoctor=data;\n      this.router.navigate(['/doctordashboard'])\n      }\n      else{\n        document.getElementById(\"logindoctor\").innerHTML=\"<p color='red'> Invalid Credentials</p>\"\n      }\n     },err=>{\n       alert(err.name)\n     })\n    \n     \n    \n     \n }\n \n \n \n onRegister(){\n \n   this.submitted = true;\n     // stop here if form is invalid\n     if (this.registerForm.invalid) {\n         return;\n     }\n     \n     if(this.submitted)\n     {\n       this.showModal = false;\n     }\n    this.doctor=this.registerForm.value\n    \n    this.doctorService.registerUser(this.doctor).subscribe(data=>{\n      \n      if(data)\n      this.toggleLoginRegister();\n    },err=>{\n      alert(err.name)\n    });\n  } \n \n\n}\n","<div class=\"loginrow\">\n    <div class=\"logincol1\">\n\n    </div>\n    <div class=\"logincol2\">\n     <div class=\"modal-header\">\n        <div class=\"modal-dialog\">\n            \n        <div  *ngIf=\"tLoginRegister == false\"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">               <div class=\"modal-content\">\n               \n                <div class=\"modal-header\">\n                 \n                  <h4 class=\"modal-title\" id=\"myModalLabel\">Doctor Login</h4>\n                 \n                </div>\n                <div class=\"modal-body\">\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                        <div class=\"form-group\">\n                          \n                          <span style=\"color: red;\" id=\"logindoctor\"> </span>\n                          <br/>\n                            <label>Email</label>\n                            <input type=\"text\" formControlName=\"email\" class=\"form-control\" myAutofocus [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                \n                            </div>\n                            <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Email</span>\n                        </div>\n                        \n                        \n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                                \n                              </div>\n                              <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Password</span>\n                          </div>\n                          \n                      <div class=\"form-group form-check\">\n                        <label class=\"form-check-label\">\n                          <input class=\"form-check-input\" type=\"checkbox\" name=\"remember\"> Remember me\n                        </label>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;\n                      <button *ngIf=\"!admin\" (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Register</button>&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                    \n                    </form>\n                   \n                </div>\n              </div>\n            </div>\n           </div>\n                <div *ngIf=\"tLoginRegister == true \"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">\n                    \n                    <div class=\"modal-dialog\">\n                    \n                      <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel\">Doctor Registration</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\n        \n        \n                          <div class=\"form-group\">\n                            <label>FirstName</label>\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" autofocus=\"true\" [ngClass]=\"{ 'is-invalid': submitted && r.firstName.errors }\" />\n                            <div *ngIf=\"submitted && r.firstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.firstName.errors.required\">firstName is required</div>\n                                <div *ngIf=\"r.firstName.errors.minlength\">firstName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                          <div class=\"form-group\">\n                            <label>LastName</label>\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.lastName.errors }\" />\n                            <div *ngIf=\"submitted && r.lastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.lastName.errors.required\">lastName is required</div>\n                                <div *ngIf=\"r.lastName.errors.minlength\">lastName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                            <div class=\"form-group\">\n                                <label>Email</label>\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.email.errors }\" />\n                                <div *ngIf=\"submitted && r.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"r.email.errors.email\">Email must be a valid email address</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.password.errors }\" />\n                                <div *ngIf=\"submitted && r.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"r.password.errors.minlength\">Password must be at least 6 characters</div>\n                                </div>\n                              </div>\n        \n                              <div class=\"form-group\">\n                                <label>PhoneNumber</label>\n                                <input type=\"tel\" formControlName=\"number\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.number.errors }\" />\n                                <div *ngIf=\"submitted && r.number.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.number.errors.required\">phoneNumber is required</div>\n                                    <div *ngIf=\"r.number.errors.minlength\">phoneNumber must contain 10 characters</div>\n                                </div>\n                              </div>\n                              <div class=\"form-group\">\n                                <label>Hospital Name</label>\n                                <input type=\"text\" formControlName=\"hospitalName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.hospitalName.errors }\" />\n                                <div *ngIf=\"submitted && r.hospitalName.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.hospitalName.errors.required\">hospitalName is required</div>\n                                    <div *ngIf=\"r.hospitalName.errors.minlength\">hospitalName must contain 10 characters</div>\n                                </div>\n                              </div>\n                              <div class=\"form-group\">\n                                <label>Hospital Address</label>\n                                <input type=\"text\" formControlName=\"city\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.city.errors }\" />\n                                <div *ngIf=\"submitted && r.city.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.city.errors.required\">city is required</div>\n                                    <div *ngIf=\"r.city.errors.minlength\">city must contain 10 characters</div>\n                                </div>\n                                \n                              </div>\n                          \n\n\n                          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>&nbsp;\n                          <button (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Login</button> &nbsp;\n                          <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                        </form>\n                        \n                  </div>\n                </div>\n                \n              </div>\n                   \n      </div>\n     \n    </div>\n    </div>\n    <div class=\"logincol3\">\n        \n    </div>\n</div>\n","import { HostListener } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  imagesUrl:String[]\n  role:any;\n  constructor(private userService:UserService,\n    private router:Router) { }\n\n  \n \n  ngOnInit() {\n    this.imagesUrl = [\n      '../../assets/images/slider1.jpg', \n      '../../assets/images/slider2.jpg', \n      '../../assets/images/slider3.jpg',\n    '../../assets/images/slider4.jpg'];\n  }\n  \n\n  \n  @HostListener('window:scroll', ['$event'])\n  handleScroll(event: KeyboardEvent) {\n    let scroll=window.pageYOffset;\n    console.log(scroll)\n    if(scroll>=160)\n    {\n      document.getElementById(\"aboutimage\").style.animation='2s fadeInFromRight 1'\n      document.getElementById(\"aboutheading\").style.animation='2s fadeInFromLeft 1'\n      document.getElementById(\"aboutpara\").style.animation='2s fadeInFromLeft 1'\n    }\n    if(scroll>=580)\n    {\n      document.getElementById(\"visionimage\").style.animation='2s fadeInFromLeft 1'\n      document.getElementById(\"visionheading\").style.animation='2s fadeInFromRight 1'\n      document.getElementById(\"visionpara\").style.animation='2s fadeInFromRight 1'\n    }\n    if(scroll>=900){\n      document.getElementById(\"missionimage\").style.animation='2s fadeInFromRight 1'\n      document.getElementById(\"missionheading\").style.animation='2s fadeInFromLeft 1'\n      document.getElementById(\"missionpara\").style.animation='2s fadeInFromLeft 1'\n    }\n  }\n  login(role:String){\n  \n    this.role=role;\n   window.sessionStorage.setItem(\"role\",role.toString());\n    \n    \n    if(this.role===\"user\"||this.role===\"admin\"){\n      document.getElementById(\"loginForm\").style.display=\"inline-block\";\n    document.getElementById(\"login\").innerHTML=\"\";\n      }\n      if(this.role===\"doctor\"){\n        document.getElementById(\"doctorForm\").style.display=\"inline-block\";\n        document.getElementById(\"login\").innerHTML=\"\";\n      }\n      if(this.role===\"suppliers\"){\n        document.getElementById(\"supplierForm\").style.display=\"inline-block\";\n        document.getElementById(\"login\").innerHTML=\"\";\n      }\n  }\n  close(){\n\n    if(this.role===\"user\"||this.role===\"admin\"){\n      document.getElementById(\"loginForm\").style.display=\"none\";\n    document.getElementById(\"login\").innerHTML=\"\";\n      }\n      if(this.role===\"doctor\"){\n        document.getElementById(\"doctorForm\").style.display=\"none\";\n        document.getElementById(\"login\").innerHTML=\"\";\n      }\n      if(this.role===\"suppliers\"){\n        document.getElementById(\"supplierForm\").style.display=\"none\";\n        document.getElementById(\"login\").innerHTML=\"\";\n      }\n  }\n\n}\n","<div class=\"nav\">\n   \n<table>\n    <tr class=\"row\">\n        <td class=\"col\"><h3>Login As</h3></td>\n        <td class=\"col\"><h3>Login As</h3></td>\n        <td class=\"col\"><h3>Login As</h3></td>\n        <td class=\"col\"><h3>Login As</h3></td>\n    </tr>\n    <tr class=\"row\">\n        <td class=\"col\">\n            <img class=\"loginlogo\" src=\"../../assets/images/patient.jpg\">\n        </td>\n        <td class=\"col\">\n            <img class=\"loginlogo\" src=\"../../assets/images/doctor.png\">\n        </td>\n        <td class=\"col\">\n            <img class=\"loginlogo\" src=\"../../assets/images/O2Suppliers.jpg\">\n        </td>\n        <td class=\"col\">\n            <img class=\"loginlogo\" src=\"../../assets/images/admin.png\">\n        </td>\n    </tr>\n    <tr class=\"row\">\n        <td class=\"col\">\n           <button (click)=\"login('user')\">Patient</button>\n        </td>\n        <td class=\"col\">\n            <button (click)=\"login('doctor')\">Doctor</button>\n        </td>\n        <td  class=\"col\">\n            <button (click)=\"login('suppliers')\">O2 Suppliers</button>\n        </td>\n        <td class=\"col\">\n            <button (click)=\"login('admin')\">Admin</button>\n        </td>\n    </tr>\n</table>\n</div>\n<div class=\"loginForm\">\n    <div class=\"loginForm-row\">\n    <div class=\"loginForm-col1\"></div>\n    <div id=\"loginForm\">\n        \n        <app-login></app-login>\n       \n   </div>\n   <div  id=\"doctorForm\">\n        \n   <app-doctorlogin></app-doctorlogin>\n   \n</div>\n<div  id=\"supplierForm\">\n        \n    <app-supplierlogin></app-supplierlogin>\n    \n </div>\n    <div class=\"loginForm-col3\"></div>\n</div>\n</div>\n<br/>\n<div class=\"slideshowcontainer\">\n    <div class=\"slideshowitem1\">\n       \n    </div>\n    <div class=\"slideshowitem2\">\n        <app-slideshow></app-slideshow>\n    </div>\n    <div class=\"slideshowitem3\">\n        \n    </div>\n</div> \n<br/>\n<div class=\"symptoms\">\n    <div class=\"symptoms-row\">\n    <div id=\"commonsymptoms\" class=\"symptoms-col1\">\n        <h5>Most Common Symptoms</h5>\n        <ul>\n            <li>fever</li>\n            <li>dry cough</li>\n            <li> tiredness</li>\n        </ul>\n    </div>\n    <div id=\"lesscommonsymptoms\" class=\"symptoms-col2\">\n        <h5>Less Common Symptoms</h5>\n        <ul>\n            <li>aches and pains</li>\n            <li>sore throat</li>\n            <li>diarrhoea</li>\n            <li>conjunctivitis</li>\n            <li>headache</li>\n            <li>loss of taste or smell</li>\n            <li>a rash on skin, or discolouration of fingers or toes</li>\n        </ul>\n    </div>\n    <div id=\"serioussymptoms\" class=\"symptoms-col3\">\n        <h5>Serious Symptoms</h5>\n        <ul>\n            <li>difficulty breathing or shortness of breath</li>\n            <li>chest pain or pressure</li>\n            <li>loss of speech or movement</li>\n        </ul>\n    </div>\n </div>\n <div class=\"symptomsadvice\">\n     <p>\n        Seek immediate medical attention if you have serious symptoms. \n        Always call before visiting your doctor or health facility. <br/>People\n        with mild symptoms who are otherwise healthy should manage their\n        symptoms at home. On average it takes <br/> 5–6 days from when someone  \n        is infected with the virus for symptoms to show, however it can\n        take up to 14 days.\n     </p>\n </div>>\n</div>\n<div class=\"about\">\n   <div>\n\n<img class=\"aboutimage\" id=\"aboutimage\" src=\"../../assets/images/aboutimage.jpg\" alt=\"\">\n   </div>\n   <div>\n       <br/>\n       <br/>\n       <br/>\n       <br/>\n       <br/>\n    <h3 id=\"aboutheading\">About Us:</h3>\n    <p id=\"aboutpara\">\n        The overwhelming crisis in the country has not only affected the mental health of people who have directly contracted COVID-19. Some experts are convinced this wave has triggered a mental health epidemic of its own.\n        In this covid-19 crisis we strive together to save your life by protecting your breath.\n    </p>\n   </div>\n</div>\n<div class=\"vision\">\n    <div class=\"visionrow\">\n       \n       <div class=\"visioncol-1\">\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <br/>\n        <h3 id=\"visionheading\">Vision:</h3>\n        <p id=\"visionpara\">COVID-19 second wave has devastated India by a rising wave of caases. Many\n            people stricken with coronavirus are dying while they wait. Hospitals\n            are struggling to accommodate breathless patients. It's a Pure Battle for breath.\n            Our vision is to save the lives.\n        </p>\n       </div>\n       <div class=\"visioncol-2\"></div>\n       <img id=\"visionimage\" src=\"../../assets/images/oxygen200-scaled.jpg\">\n    </div>\n</div>\n<div class=\"mission\">\n<div class=mission-row>\n    <div class=\"mission-col1\">\n        <br/>\n        \n        <img id=\"missionimage\" src=\"../../assets/images/Oxygen_.jpg\">\n    </div>\n    <div class=\"mission-col2\">\n        <br/>\n        <br/>\n        <br/>\n        <h3 id=\"missionheading\">Mission :</h3>\n        <p id=\"missionpara\">The Oxygen crisis became inadequate because too little is too late. \n            Not all deaths due to Covid-19 are preventable.\n             But deaths due to lack of medical Emergency of O2 \n             at accurate times are. Solving India’s oxygen crisis should be the topmost priority of the government.\n              This is the only essential service that is needed at present.\n               Our mission is to reach and supply O2 \n            on  emergency for Home Isolated covid affected patients.\n             Let’s India breath again!</p>\n    </div>\n</div>\n</div>  \n<br>\n<br>\n\n<div class=\"footer\">\n    <div> <h6>Important Links</h6>\n        <br>\n        </div>\n   <div class=\"footer-row\">\n    <div class=\"footer-col\">\n        <a href=\"https://en.wikipedia.org/wiki/Template:COVID-19_pandemic_data\">\n            worldwide corona statistics\n        </a>\n        <br>\n        \n        <a href=\"https://www.bbc.com/news/health-51665497\"> covaid vaccine importance </a>\n        <br>\n        <a href=\"https://www.bbc.com/news/uk-51506729\"> Rules for social distancing</a>\n        <br>\n        <a href=\"https://www.bbc.com/news/health-51048366\">\n            pre-covid precautions\n        </a>\n        <br>\n    </div>\n    <div class=\"footer-col\">\n    <a href=\"https://pharmeasy.in/blog/6-must-dos-post-covid-19-recovery/\">\n        post-covid precautions\n    </a>\n    <br>\n    <a href=\"https://www.phoebehealth.com/patients-and-visitors/coronavirus/home-self-isolation-tips\">\n        home isolation tips\n    </a>\n    <br>\n    <a href=\"https://www.mysmartprice.com/gear/hospital-bed-availability-online-covid/\">\n        hospital’s bed vacancy updates\n    </a>\n    <br>\n    <a href=\"https://www.bbc.com/news/uk-56841381\">\n        a war for breath in India \n    </a>\n    <br>\n    </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserDetails } from 'src/model/user-details';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  unBlockUser(user: UserDetails) {\n    return this.http.post<UserDetails[]>(this.baseUrl+\"/user/unblock\",user)\n  }\n  blockUser(user: UserDetails) {\n    return this.http.post<UserDetails[]>(this.baseUrl+\"/user/block\",user)\n  }\n  getAllUsers() {\n    return this.http.get<UserDetails[]>(this.baseUrl+\"/getAll\")\n  }\n  changePassword() {\n   return this.http.post(this.baseUrl+'/newpassword',this.auser);\n  }\n  validatepassword(oldPassword: any) {\n    \n    return this.http.post<boolean>(this.baseUrl+\"/validate/\"+this.auser.email,oldPassword)\n  }\n  getImage(imageName: any) {\n    console.log(imageName)\n    return this.http.get(this.baseUrl+'/image/get/' +imageName)\n  }\n  uploadFile(uploadImageData: FormData) {\n   return  this.http.post(this.baseUrl+'/image/upload', uploadImageData, { observe: 'response' });\n  }\n  \n  \n  \n  private baseUrl=\"http://localhost:8001/api/users\"\n  auser: UserDetails;\n \n  constructor(private http:HttpClient) { }\n  \n  registerUser(user: UserDetails) {\n    if(user.role!=\"admin\")\n    return this.http.post<boolean>(this.baseUrl+\"/user/register\",user);\n  }\n  validateUser(user: UserDetails) {\n    \n    if(user.role==='user')\n       return this.http.post<UserDetails>(this.baseUrl+\"/user/login\",user)\n    if(user.role==='admin')\n    return this.http.post<UserDetails>(this.baseUrl+\"/admin/login\",user)\n   \n  }\n}\n","<!-- \n    My Account.\n    oders waiting for approval.\n    can view document.\n    Specify Emergency.\n    forward order.\n\n -->\n \n<div class=\"nav-menu\">\n    <a class=\"success-link\" (click)=\"waitingApplications()\">Applications</a>\n    <a class=\"success-link\" (click)=\"myAccount()\">My Details</a>\n    <a class=\"danger-link\" (click)=\"logout()\">Log Out</a>\n   \n  </div>\n <div >\n     \n    <div class=\"checkStatus\" *ngIf=\"checkStatus\" >\n        <br/>\n        <h3>Welcome {{doctor.firstName}}</h3>\n        <h4 style=\"text-align: center;\">Applications</h4>\n\n        <h5>Waiting For Approval</h5>\n        <table *ngIf=\"applications!=undefined\"class=\"application\">\n            <tr >\n                <th>Applicant</th>\n                <th>Email</th>\n                <th>Patient</th>\n                <th>Address</th>\n                <th>Contact</th>\n                <th>Status</th>\n                <th>Progress</th>\n                <th>Emergency</th>\n                <th>Applied on</th>\n                <th>Approved on</th>\n                <th>LastUpdate</th>\n                <th>Delivery Initiated</th>\n                <th>Document</th>\n                <th>Modify</th>\n            </tr>\n            <tr *ngFor=\"let a of applications\">\n                <td *ngIf=\"a.status\">{{a.applicantName}}</td>\n                <td *ngIf=\"a.status\">{{a.applicantMail}}</td>\n                <td *ngIf=\"a.status\">{{a.patientName}}</td>\n                <td *ngIf=\"a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\n                \n                <td *ngIf=\"a.status\">{{a.mobile}}</td>\n                <td *ngIf=\"a.status\">{{a.status}}</td>\n                <td *ngIf=\"a.status\">{{a.waitingWith}}</td>\n                <td *ngIf=\"a.status\"><select [(ngModel)]=\"a.emergency\">\n                    <option>Major</option>\n                    <option>Moderate</option>\n                    <option>Minor</option>\n                </select></td>\n                <td *ngIf=\"a.status\">{{a.appliedOn}}</td>\n                <td *ngIf=\"a.status\">{{a.approvedOn}}</td>\n                <td *ngIf=\"a.status\">{{a.lastUpdate}}</td>\n                <td *ngIf=\"a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\n                <td *ngIf=\"a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\n                <td *ngIf=\"a.status\"><button (click)=\"approve(a)\" class=\"btn btn-success\">Approve</button></td>\n            </tr>\n            \n        </table>\n          <div *ngIf=\"applications==undefined\">\n              No Records Found\n          </div>\n        \n    </div>\n\n    <div class=\"mydetails\" *ngIf=\"myDetails\" >\n        <br/>\n        <h3>Welcome {{doctor.firstName}}</h3>\n        <h4 style=\"text-align: center;\">My Details</h4>\n        <table>\n            <tr>\n                <td>\n                    First Name \n                </td>\n                <td>\n                    {{doctor.firstName}}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Last Name\n                </td>\n                <td>\n                    {{doctor.lastName}}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Email \n                </td>\n                <td>\n                    {{doctor.email}}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Number\n                </td>\n                <td>\n                    {{doctor.number}}\n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Old Password.\n                </td>\n                <td>\n                    <input type=\"password\" [(ngModel)]=\"oldPassword\"><br>\n                    <button  class=\"btn btn-success\" (click)=\"validate()\">Validate</button> <br>\n                    <span *ngIf=\"passwordValid\" style=\"color: green;\">Success &#10003;</span>\n                    \n                </td>\n            </tr>\n            <tr>\n                <td>\n                    New Password.\n                </td>\n                <td>\n                    <input type=\"password\" [(ngModel)]=\"newpassword\">\n                     \n                </td>\n            </tr>\n            <tr>\n                <td>\n                    Re-Enter New Password.\n                </td>\n                <td>\n                    <input type=\"password\" [(ngModel)]=\"newpassword2\"><br>\n                    <button class=\"btn btn-success\" (click)=\"changePassword()\">Change</button> \n                </td>\n            </tr>\n            \n        </table>\n        \n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationForm } from 'src/model/application-form';\nimport { DoctorDetails } from 'src/model/doctor-details';\nimport { ApplicationFromService } from 'src/services/application-from.service';\nimport { DoctorService } from 'src/services/doctor.service';\nimport { ImageService } from 'src/services/image.service';\n\n@Component({\n  selector: 'app-doctor-dash-board',\n  templateUrl: './doctor-dash-board.component.html',\n  styleUrls: ['./doctor-dash-board.component.css']\n})\nexport class DoctorDashBoardComponent implements OnInit {\n  emergency:string=\"select\"\n  doctor:DoctorDetails\n  applications:ApplicationForm[]\n  oldPassword: any;\n  passwordValid:boolean=false;\n  newpassword:any;\n  newpassword2:any;\n  checkStatus:boolean=true;\n  myDetails:boolean=false;\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  imageUploded: boolean=false;\n  imageName: any;\n  constructor( private doctorService:DoctorService,\n    private formService:ApplicationFromService,\n    private router:Router,\n    private imageService:ImageService) { }\n\n  ngOnInit(): void {\n    if(this.doctorService.adoctor==undefined)\n    this.router.navigate([''])\n    this.doctor=this.doctorService.adoctor\n    this.getApplications();\n  }\n  getApplications() {\n    this.formService.getApplicationsWithDoctor().subscribe(data=>{\n      this.applications=data\n    },err=>{\n      alert(err.name)\n    });\n  }\n  \n\n  logout(){\n    this.doctorService.adoctor=undefined\n    this.router.navigate([''])\n  }\n  myAccount(){\n    this.checkStatus=false;\n    this.myDetails=true;\n\n \n  }\n  waitingApplications(){\n    this.checkStatus=true;\n    this.myDetails=false;\n \n  }\n  validate(){\n    this.doctorService.validatepassword(this.oldPassword).subscribe(data=>{\n        if(data)\n        this.passwordValid=true;\n        else\n        alert(\"Please enter a valid Password\")\n    });\n  }\n changePassword(){\n   if(!this.passwordValid){\n      alert(\"Please validate your Password\")\n      return;\n   }\n   console.log(this.newpassword2==this.newpassword)\n   console.log(this.newpassword2===this.newpassword)\n   if(!(this.newpassword===this.newpassword2)){\n      alert(\"Passwords Did not match\")\n      return;\n   }\n   this.doctorService.adoctor.password=this.newpassword;\n   this.doctorService.changePassword().subscribe(data=>{\n     alert(\" Password Succesfully Changed\")\n     this.newpassword=\"\"\n     this.newpassword2=\"\"\n     this.oldPassword=\"\"\n     this.passwordValid=false;\n   });\n }\n     //Gets called when the user clicks on retieve image button to get the image from back end\n     getImage(id:any) {\n      //Make a call to Sprinf Boot to get the Image Bytes.\n      \n        this.imageService.getImage(id).subscribe(\n          res => {\n            this.retrieveResonse = res;\n            this.base64Data = this.retrieveResonse.picByte;\n            this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n             window.sessionStorage.setItem(\"image\",this.retrievedImage);\n             window.open(\"http://localhost:4200/view-document\",\"_blank\");\n          }\n        );\n    }\n    approve(form:ApplicationForm){\n      form.approvedBy=this.doctor.firstName+\" \"+this.doctor.lastName\n      this.formService.approve(form).subscribe(data=>{\n        this.applications=data;\n      })\n    }\n    \n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ApplicationForm } from 'src/model/application-form';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationFromService {\n  getAllApplication() {\n    return this.http.get<ApplicationForm[]>(this.baseUrl+\"/getAll\");\n  }\n  approveDelivery(form: ApplicationForm) {\n    return this.http.put<ApplicationForm[]>(this.baseUrl+\"/approve/delivery\",form)  \n  }\n  getApplicationsWithSupplier() {\n    return this.http.get<ApplicationForm[]>(this.baseUrl+\"/waitingwith/supplier\") \n  }\n  approve(form: ApplicationForm) {\n    return this.http.put<ApplicationForm[]>(this.baseUrl+\"/approve\",form)\n  }\n  getApplicationsWithDoctor() {\n   return this.http.get<ApplicationForm[]>(this.baseUrl+\"/waitingwith/doctor\")\n  }\n  cancel(form: ApplicationForm) {\n    return this.http.put(this.baseUrl+\"/cancel\",form)\n  }\n  revoke(form:ApplicationForm){\n    return this.http.put(this.baseUrl+\"/revoke\",form)\n  }\n  myApplication(email: String) {\n    return this.http.get<ApplicationForm[]>(this.baseUrl+\"/myapplications/\"+email);\n  }\n  applyForm(value: any) {\n    return this.http.post(this.baseUrl+\"/applyForm\",value)\n  }\n\n private baseUrl=\"http://localhost:8001//api/application\";\n  constructor(private http:HttpClient) { }\n}\n","<!-- admin dash board.\nall users:\nlist all Patients:\nList all Doctors;\nlist all O2Suppliers:\n\nAll orders:\nopen and close with status:-> applied->doctor->admin->o2suppliers->delivery\n\ncan edit and cancel.\n\nAdmin can add,edit and block  any user\n\ncan change status of order -->\n\n<div class=\"nav-menu\">\n    <a class=\"success-link\" (click)=\"allApplications()\">List Applications</a>\n    <a class=\"success-link\" (click)=\"allUsers()\">List Users</a>\n    <a class=\"success-link\" (click)=\"allDoctors()\">List Doctors</a>\n    <a class=\"success-link\" (click)=\"allSuppliers()\">List Suppliers</a>\n    <a class=\"success-link\" (click)=\"myAccount()\">My Details</a>\n    <a class=\"danger-link\" (click)=\"logout()\">Log Out</a>\n   \n  </div>\n\n\n<div class=\"dashboard\">\n    \n   <div *ngIf=\"listApplications\"  class=\"checkStatus\">\n       <br/>\n       <h3>Welcome {{admin.firstName}}</h3>\n       <h4 style=\"text-align: center;\">Applications</h4>\n\n       \n       <h5>Open Applications</h5>\n       <table class=\"application\">\n           <tr >\n               <th>Applicant</th>\n               <th>Email</th>\n               <th>Patient</th>\n               <th>Address</th>\n               <th>Contact</th>\n               <th>Status</th>\n               <th>Progress</th>\n              \n               <th>Emergency</th>\n               <th>Approved Doctor</th>\n               <th>Applied on</th>\n               <th>Approved on</th>\n               <th>LastUpdate</th>\n               <th>Delivery Initiated</th>\n\n               <th>Document</th>\n               <th>Modify</th>\n           </tr>\n           <tr *ngFor=\"let a of applications\">\n               <td *ngIf=\"a.status\">{{a.applicantName}}</td>\n               <td *ngIf=\"a.status\">{{a.applicantMail}}</td>\n               <td *ngIf=\"a.status\">{{a.patientName}}</td>\n               <td *ngIf=\"a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\n               \n               <td *ngIf=\"a.status\">{{a.mobile}}</td>\n               <td *ngIf=\"a.status\">{{a.status}}</td>\n               <td *ngIf=\"a.status\">{{a.waitingWith}}</td>\n\n               <td *ngIf=\"a.status\">{{a.emergency}}</td>\n               <td *ngIf=\"a.status\">{{a.approvedBy}}</td>\n               <td *ngIf=\"a.status\">{{a.appliedOn}}</td>\n               <td *ngIf=\"a.status\">{{a.approvedOn}}</td>\n               <td *ngIf=\"a.status\">{{a.lastUpdate}}</td>\n               <td *ngIf=\"a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\n               \n               <td *ngIf=\"a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\n               <td *ngIf=\"a.status\"><button (click)=\"cancel(a)\" class=\"btn btn-danger\">Close</button></td>\n           </tr>\n           \n       </table>\n           <br/><br/>\n           <h5>Closed Applications</h5>\n       <table class=\"application\">\n           <tr >\n               <th>Applicant</th>\n               <th>Email</th>\n               <th>Patient</th>\n               <th>Address</th>\n               <th>Contact</th>\n               <th>Status</th>\n               <th>Progress</th>\n               \n               <th>Emergency</th>\n               <th>Approved Doctor</th>\n               <th>Applied on</th>\n               <th>Approved on</th>\n               <th>LastUpdate</th>\n               <th>Delivery Initiated</th>\n\n               <th>Document</th>\n               <th>Modify</th>\n           </tr>\n           <tr *ngFor=\"let a of applications\">\n               <td *ngIf=\"!a.status\">{{a.applicantName}}</td>\n               <td *ngIf=\"!a.status\">{{a.applicantMail}}</td>\n               <td *ngIf=\"!a.status\">{{a.patientName}}</td>\n               <td *ngIf=\"!a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\n               \n               <td *ngIf=\"!a.status\">{{a.mobile}}</td>\n               <td *ngIf=\"!a.status\">{{a.status}}</td>\n               <td *ngIf=\"!a.status\">{{a.waitingWith}}</td>\n\n               <td *ngIf=\"!a.status\">{{a.emergency}}</td>\n               <td *ngIf=\"!a.status\">{{a.approvedBy}}</td>\n               <td *ngIf=\"!a.status\">{{a.appliedOn}}</td>\n               <td *ngIf=\"!a.status\">{{a.approvedOn}}</td>\n               <td *ngIf=\"!a.status\">{{a.lastUpdate}}</td>\n               <td *ngIf=\"!a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\n\n               <td *ngIf=\"!a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\n               <td *ngIf=\"!a.status\"><button (click)=\"revoke(a)\" class=\"btn btn-success\">Open Again</button></td>\n           </tr>\n           \n       </table>\n   </div>\n   \n   <div *ngIf=\"listUsers\"  class=\"checkStatus\">\n       <br/>\n       <h3>Welcome {{admin.firstName}}</h3>\n       <h4 style=\"text-align: center;\">All Users</h4>\n\n       \n       <h5>Active Users</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Status</th>\n               <th>Block</th>\n               \n           </tr>\n           <tr *ngFor=\"let u of users\">\n              <td *ngIf=\"u.status\">{{u.firstName}}</td>\n               <td *ngIf=\"u.status\">{{u.lastName}}</td>\n               <td *ngIf=\"u.status\">{{u.email}}</td>\n               <td *ngIf=\"u.status\">{{u.number}}</td>\n               <td *ngIf=\"u.status\">Active</td>\n               <td *ngIf=\"u.status&&(u.role=='admin')\"><button class=\"btn btn-danger\" disabled>Block</button></td>\n               <td *ngIf=\"u.status&&(u.role!='admin')\"><button (click)=\"blockUser(u)\" class=\"btn btn-danger\">Block</button></td>\n            </tr>\n           \n       </table>\n                 \n       <h5>Blocked Users</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Status</th>\n               <th>Block</th>\n               \n           </tr>\n           <tr *ngFor=\"let u of users\">\n              <td *ngIf=\"!u.status\">{{u.firstName}}</td>\n               <td *ngIf=\"!u.status\">{{u.lastName}}</td>\n               <td *ngIf=\"!u.status\">{{u.email}}</td>\n               <td *ngIf=\"!u.status\">{{u.number}}</td>\n               <td *ngIf=\"!u.status\">In Active</td>\n               <td *ngIf=\"!u.status\"><button (click)=\"unBlockUser(u)\" class=\"btn btn-success\">UnBlock</button></td>\n           </tr>\n           \n       </table>\n \n   </div>\n  \n   <div *ngIf=\"listSuppliers\"  class=\"checkStatus\">\n       <br/>\n       <h3>Welcome {{admin.firstName}}</h3>\n       <h4 style=\"text-align: center;\">All Suppliers</h4>\n\n       \n       <h5>Active Suppliers</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Industry Name</th>\n                <th>City</th>        \n                <th>Status</th>\n                <th>Block</th>       \n           </tr>\n           <tr *ngFor=\"let s of suppliers\">\n\n               <td *ngIf=\"s.status\">{{s.firstName}}</td>\n               <td *ngIf=\"s.status\">{{s.lastName}}</td>\n               <td *ngIf=\"s.status\">{{s.email}}</td>\n               <td *ngIf=\"s.status\">{{s.number}}</td>\n               <td *ngIf=\"s.status\">{{s.industryName}}</td>\n               <td *ngIf=\"s.status\">{{s.city}}</td>\n               <td *ngIf=\"s.status\">Active</td>\n               <td *ngIf=\"s.status\"><button class=\"btn btn-danger\" (click)=\"blockSupplier(s)\">Block</button></td>\n           </tr>\n           \n       </table>\n      \n       \n       <h5>Blocked Suppliers</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Industry Name</th>\n                <th>City</th>        \n                <th>Status</th>\n                <th>Block</th>       \n           </tr>\n           <tr *ngFor=\"let s of suppliers\">\n\n               <td *ngIf=\"!s.status\">{{s.firstName}}</td>\n               <td *ngIf=\"!s.status\">{{s.lastName}}</td>\n               <td *ngIf=\"!s.status\">{{s.email}}</td>\n               <td *ngIf=\"!s.status\">{{s.number}}</td>\n               <td *ngIf=\"!s.status\">{{s.industryName}}</td>\n               <td *ngIf=\"!s.status\">{{s.city}}</td>\n               <td *ngIf=\"!s.status\">In Active</td>\n               <td *ngIf=\"!s.status\"><button class=\"btn btn-success\" (click)=\"unBlockSupplier(s)\">Un Block</button></td>\n           </tr>\n           \n       </table>\n      \n   </div>\n   \n   <div *ngIf=\"listDoctors\"  class=\"checkStatus\">\n       <br/>\n       <h3>Welcome {{admin.firstName}}</h3>\n       <h4 style=\"text-align: center;\">All Doctors</h4>\n\n       \n       <h5>Active Doctors</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Hospital Name</th>\n                <th>City</th> \n                <th>Status</th>\n                <th>Block</th>                  \n           </tr>\n           <tr *ngFor=\"let d of doctors\">\n               \n            <td *ngIf=\"d.status\">{{d.firstName}}</td>\n            <td *ngIf=\"d.status\">{{d.lastName}}</td>\n            <td *ngIf=\"d.status\">{{d.email}}</td>\n            <td *ngIf=\"d.status\">{{d.number}}</td>\n            <td *ngIf=\"d.status\">{{d.industryName}}</td>\n            <td *ngIf=\"d.status\">{{d.city}}</td>\n            <td *ngIf=\"d.status\">Active</td>\n            <td *ngIf=\"d.status\"><button class=\"btn btn-danger\" (click)=\"blockDoctor(d)\">Block</button></td>\n\n           </tr>\n           \n       </table>\n       <h5>Blocked Doctors</h5>\n       <table class=\"application\">\n           <tr >\n               <th>firstName</th>\n               <th>lastName</th>\n               <th>email</th>\n               <th>Contact</th>\n               <th>Hospital Name</th>\n                <th>City</th> \n                <th>Status</th>\n                <th>Block</th>                  \n           </tr>\n           <tr *ngFor=\"let d of doctors\">\n               \n            <td *ngIf=\"!d.status\">{{d.firstName}}</td>\n            <td *ngIf=\"!d.status\">{{d.lastName}}</td>\n            <td *ngIf=\"!d.status\">{{d.email}}</td>\n            <td *ngIf=\"!d.status\">{{d.number}}</td>\n            <td *ngIf=\"!d.status\">{{d.industryName}}</td>\n            <td *ngIf=\"!d.status\">{{d.city}}</td>\n            <td *ngIf=\"!d.status\">In Active</td>\n            <td *ngIf=\"!d.status\"><button class=\"btn btn-success\" (click)=\"unBlockDoctor(d)\">Un Block</button></td>\n\n           </tr>\n           \n       </table>\n\n   </div>\n   \n   <div *ngIf=\"myDetails\" class=\"mydetails\">\n       <br/>\n       <h3>Welcome {{admin.firstName}}</h3>\n       <h4 style=\"text-align: center;\">My Details</h4>\n       <table>\n           <tr>\n               <td>\n                   First Name \n               </td>\n               <td>\n                   {{admin.firstName}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Last Name\n               </td>\n               <td>\n                   {{admin.lastName}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Email \n               </td>\n               <td>\n                   {{admin.email}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Number\n               </td>\n               <td>\n                   {{admin.number}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Old Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"oldPassword\"><br>\n                   <button  class=\"btn btn-success\" (click)=\"validate()\">Validate</button> <br>\n                   <span *ngIf=\"passwordValid\" style=\"color: green;\">Success &#10003;</span>\n                   \n               </td>\n           </tr>\n           <tr>\n               <td>\n                   New Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"newpassword\">\n                    \n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Re-Enter New Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"newpassword2\"><br>\n                   <button class=\"btn btn-success\" (click)=\"changePassword()\">Change</button> \n               </td>\n           </tr>\n           \n       </table>\n       \n   </div>\n\n<!-- <div  class=\"menu-col4\"> \n      \n      \n         \n          \n    <button class=\"button-info\">Apply</button><br/><br/>\n   <button class=\"button-info\">Check Status</button><br/><br/>\n   <button class=\"button-info\" >My Details</button><br/><br/>\n   <button class=\"button-danger\" (click)=\"logout()\">Log Out</button>\n   <table>\n       <tr>\n           <th> Menu</th>\n       </tr>\n      \n       <tr>\n           <td (click)=\"allApplications()\">\n               <a>All Applications</a>\n           </td>\n       </tr>\n       <tr>\n        <td (click)=\"allUsers()\">\n            <a>All Users</a>\n        </td>\n      </tr>\n      <tr>\n        <td (click)=\"allDoctors()\">\n            <a>All Doctors</a>\n        </td>\n    </tr>\n    <tr>\n        <td (click)=\"allSuppliers()\">\n            <a>All Suppliers</a>\n        </td>\n    </tr>\n       <tr>\n           <td (click)=\"myAccount()\" >\n               <a>My Details</a>\n           </td>\n       </tr>\n       <tr>\n           <td  (click)=\"logout()\"id=\"logout\">\n               <a>Log Out</a>\n           </td>\n       </tr>\n   </table>\n</div>\n\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationForm } from 'src/model/application-form';\nimport { DoctorDetails } from 'src/model/doctor-details';\nimport { SupplierDetails } from 'src/model/supplier-details';\nimport { UserDetails } from 'src/model/user-details';\nimport { ApplicationFromService } from 'src/services/application-from.service';\nimport { DoctorService } from 'src/services/doctor.service';\nimport { ImageService } from 'src/services/image.service';\nimport { O2SupplierService } from 'src/services/o2-supplier.service';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-admin-dash-board',\n  templateUrl: './admin-dash-board.component.html',\n  styleUrls: ['./admin-dash-board.component.css']\n})\nexport class AdminDashBoardComponent implements OnInit {\n  admin:UserDetails\n  doctors:DoctorDetails[]\n  users:UserDetails[]\n  suppliers:SupplierDetails[]\n  applications:ApplicationForm[]\n  oldPassword: any;\n  passwordValid:boolean=false;\n  newpassword:any;\n  newpassword2:any;\n  listApplications:boolean=true;\n  myDetails:boolean=false;\n  listUsers:boolean=false;\n  listDoctors:boolean=false;\n  listSuppliers:boolean=false;\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  imageUploded: boolean=false;\n  imageName: any;\n  constructor(private userService:UserService,\n    private router:Router,\n    private formService:ApplicationFromService,\n    private doctorService:DoctorService,\n    private supplierService:O2SupplierService,\n    private imageService:ImageService) { }\n\n  ngOnInit(): void {\n    this.admin=this.userService.auser\n    if(this.admin==undefined||this.admin==null){\n      this.router.navigate([''])\n    }\n    this.getdata();\n  }\n\n  getdata(){\n    this.supplierService.getAllSuppliers().subscribe(data=>this.suppliers=data)\n    this.doctorService.getAllDoctors().subscribe(data=>this.doctors=data)\n    this.userService.getAllUsers().subscribe(data=>{this.users=data})\n    this.formService.getAllApplication().subscribe(data=>this.applications=data);\n\n  }\n\n  allApplications(){\n      this.listApplications=true;\n      this.listDoctors=false;\n      this.listSuppliers=false;\n      this.listUsers=false;\n      this.myDetails=false;\n  }\n  allUsers(){\n      this.listApplications=false;\n      this.listDoctors=false;\n      this.listSuppliers=false;\n      this.listUsers=true;\n      this.myDetails=false;\n  }\n  allDoctors(){\n    this.listApplications=false;\n    this.listDoctors=true;\n    this.listSuppliers=false;\n    this.listUsers=false;\n    this.myDetails=false;\n  }\n  allSuppliers(){\n    this.listApplications=false;\n    this.listDoctors=false;\n    this.listSuppliers=true;\n    this.listUsers=false;\n    this.myDetails=false;\n  }\n  myAccount(){\n    this.listApplications=false;\n    this.listDoctors=false;\n    this.listSuppliers=false;\n    this.listUsers=false;\n    this.myDetails=true;\n  }\n  logout(){\n      this.userService.auser=undefined\n      this.router.navigate([''])\n  }\n\n\n  validate(){\n    this.userService.validatepassword(this.oldPassword).subscribe(data=>{\n        if(data)\n        this.passwordValid=true;\n        else\n        alert(\"Please enter a valid Password\")\n    });\n  }\n changePassword(){\n   if(!this.passwordValid){\n      alert(\"Please validate your Password\")\n      return;\n   }\n     if(!(this.newpassword===this.newpassword2)){\n      alert(\"Passwords Did not match\")\n      return;\n   }\n   this.userService.auser.password=this.newpassword;\n   this.userService.changePassword().subscribe(data=>{\n     alert(\" Password Succesfully Changed\")\n     this.newpassword=\"\"\n     this.newpassword2=\"\"\n     this.oldPassword=\"\"\n     this.passwordValid=false;\n   });\n }\n cancel(form:ApplicationForm){\n   form.status=false;\n    this.formService.cancel(form).subscribe();\n }\n revoke(form:ApplicationForm){\n  form.status=true;\n   this.formService.revoke(form).subscribe();\n  }\n  blockUser(user:UserDetails){\n    this.userService.blockUser(user).subscribe(data=>this.users=data);\n  }\n  unBlockUser(user:UserDetails){\n    this.userService.unBlockUser(user).subscribe(data=>this.users=data)\n  }\n  blockDoctor(doctor:DoctorDetails){\n    this.doctorService.blockDoctor(doctor).subscribe(data=>this.doctors=data);\n  }\n  unBlockDoctor(doctor:DoctorDetails){\n    this.doctorService.unBlockDoctor(doctor).subscribe(data=>this.doctors=data)\n  }\n  blockSupplier(supplier:SupplierDetails){\n    this.supplierService.blockSupplier(supplier).subscribe(data=>this.suppliers=data);\n  }\n  unBlockSupplier(supplier:SupplierDetails){\n    this.supplierService.unBlockSupplier(supplier).subscribe(data=>this.suppliers=data)\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { DoctorDetails } from 'src/model/doctor-details';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoctorService {\n  unBlockDoctor(doctor: DoctorDetails) {\n    return this.http.post<DoctorDetails[]>(this.baseUrl+\"/unblock\",doctor)\n  }\n  \n  blockDoctor(doctor: DoctorDetails) {\n    return this.http.post<DoctorDetails[]>(this.baseUrl+\"/block\",doctor)\n    }\n  changePassword() {\n    return this.http.post(this.baseUrl+'/newpassword',this.adoctor);\n      }\n  validatepassword(oldPassword: any) {\n    return this.http.post<boolean>(this.baseUrl+\"/validate/\"+this.adoctor.email,oldPassword)\n  }\n  getAllDoctors() {\n  return this.http.get<DoctorDetails[]>(this.baseUrl+\"/getAll\")\n  }\n  private baseUrl=\"http://localhost:8001/api/users/doctor\"\n  adoctor:DoctorDetails\n  registerUser(doctor: DoctorDetails) {\n   return this.http.post(this.baseUrl+\"/register\",doctor)\n  }\n  validateUser(doctor: DoctorDetails) {\n    return this.http.post<DoctorDetails>(this.baseUrl+\"/login\",doctor)\n  }\n\n  constructor(private http:HttpClient) { }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApplicationForm } from 'src/model/application-form';\n\nimport { UserDetails } from 'src/model/user-details';\nimport { ApplicationFromService } from 'src/services/application-from.service';\nimport { ImageService } from 'src/services/image.service';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-user-dash-board',\n  templateUrl: './user-dash-board.component.html',\n  styleUrls: ['./user-dash-board.component.css']\n})\nexport class UserDashBoardComponent implements OnInit {\n  oldPassword: any;\n  passwordValid:boolean=false;\n  newpassword:any;\n  newpassword2:any;\n  constructor(private httpClient: HttpClient,\n    private userService:UserService,\n    private router:Router,\n    private formBuilder:FormBuilder,\n    private imageService:ImageService,\n    private formService:ApplicationFromService)\n     { }\n \n  application:boolean=false;\n  checkStatus:boolean=false;\n  myDetails:boolean=false;\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  imageUploded: boolean=false;\n  imageName: any;\n  user:UserDetails;\n  applicationForm:FormGroup;\n  submitted:boolean=false;\n  applications:ApplicationForm[];\n  //Gets called when the user selects an image\n  public onFileChanged(event) {\n    //Select File\n    this.selectedFile = event.target.files[0];\n  }\napply(){\n  this.submitted=true;\n  console.log(this.applicationForm.value)\n  if(!this.imageUploded){\n    alert(\"Please Upload Supporting Document\")\n    return;\n  }\n  this.formService.applyForm(this.applicationForm.value).subscribe(data=>{\n    alert(\"Succesfully Submitted\")\n    this.myApplications()\n  },err=>{\n    alert(err.name)\n  });\n}\n\n  //Gets called when the user clicks on submit to upload the image\n  onUpload() {\n    \n    let acceptedType=['image/png','image/jpg','image/jpeg']\n    let i=0;\n   for(let type of acceptedType )\n    {\n      \n      if(type!=this.selectedFile.type){\n     \n       i++;\n      }\n      else\n      break;\n     \n      \n     \n    }\n    \n    if(i>=3)\n    {\n      document.getElementById(\"imageerror\").innerHTML=\"<p>Accepted formats .jpg .jpeg .png </p>\"\n      return;\n    }\n   \n    //FormData API provides methods and properties to allow us easily prepare form data to be sent with POST HTTP requests.\n    const uploadImageData = new FormData();\n    uploadImageData.append('imageFile', this.selectedFile, this.selectedFile.name);\n    \n    //Make a call to the Spring Boot Application to save the image\n    this.imageService.uploadImage(uploadImageData)\n      .subscribe(response=> {\n        this.applicationForm.value.imageId=response.id;\n       this.imageUploded=true;\n       \n       \n      });\n\n\n  }\n\n    //Gets called when the user clicks on retieve image button to get the image from back end\n    getImage(id:any) {\n    //Make a call to Sprinf Boot to get the Image Bytes.\n    \n      this.imageService.getImage(id).subscribe(\n        res => {\n          this.retrieveResonse = res;\n          this.base64Data = this.retrieveResonse.picByte;\n          this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n           window.sessionStorage.setItem(\"image\",this.retrievedImage);\n           window.open(\"http://localhost:4200/view-document\",\"_blank\");\n        }\n      );\n  }\nlogout(){\n  this.userService.auser=undefined;\n  this.router.navigate([''])\n}\n\nshowForm(){\n  this.checkStatus=false;\n  this.myDetails=false;\n  this.application=true;\n\n}\nmyApplications(){\nthis.application=false;\nthis.myDetails=false;\nthis.checkStatus=true;\n\nthis.formService.myApplication(this.user.email).subscribe(data=>this.applications=data)\n}\nmyAccount(){\nthis.checkStatus=false;\nthis.application=false;\nthis.myDetails=true;\n\n}\ncancel(form:ApplicationForm){\n  form.status=false\n  this.formService.cancel(form).subscribe();\n  \n}\nrevoke(form:ApplicationForm){\n  form.status=true\n  this.formService.revoke(form).subscribe();\n \n  \n}\nget r(){return this.applicationForm.controls}\n  ngOnInit(): void {\n    this.user=this.userService.auser;\n    if(this.user==undefined||this.user==null)\n      this.router.navigate(['/'])\n    this.applicationForm=this.formBuilder.group({\n            \n            \n           \n            applicantName:[this.user.firstName+\" \"+this.user.lastName,Validators.required],\n            applicantMail:[this.user.email,Validators.required],\n            patientName:['',Validators.required],\n            address:['',Validators.required],\n            city:['',Validators.required],\n            district:['',Validators.required],\n            state:['',Validators.required],\n            mobile:[this.user.number],\n            imageId:[]\n    });\n     \n   this.myApplications()\n  }\n  validate(){\n    this.userService.validatepassword(this.oldPassword).subscribe(data=>{\n        if(data)\n        this.passwordValid=true;\n        else\n        alert(\"Please enter a valid Password\")\n    });\n  }\n changePassword(){\n   if(!this.passwordValid){\n      alert(\"Please validate your Password\")\n      return;\n   }\n   console.log(this.newpassword2==this.newpassword)\n   console.log(this.newpassword2===this.newpassword)\n   if(!(this.newpassword===this.newpassword2)){\n      alert(\"Passwords Did not match\")\n      return;\n   }\n   this.userService.auser.password=this.newpassword;\n   this.userService.changePassword().subscribe(data=>{\n     alert(\" Password Succesfully Changed\")\n     this.newpassword=\"\"\n     this.newpassword2=\"\"\n     this.oldPassword=\"\"\n     this.passwordValid=false;\n   });\n }\n\n}\n","\r\n<div class=\"nav-menu\">\r\n    <a class=\"success-link\" (click)=\"showForm()\">Apply</a>\r\n    <a class=\"success-link\" (click)=\"myApplications()\"> My Applications</a>\r\n    <a class=\"success-link\" (click)=\"myAccount()\">My Details</a>\r\n    <a class=\"danger-link\" (click)=\"logout()\">Log Out</a>\r\n   \r\n  </div>\r\n<div >\r\n\r\n    \r\n    <div *ngIf=\"application\" class=\"apply\"> \r\n        <br/>\r\n        <h3>Welcome {{user.firstName}}</h3>\r\n         <h2>Application Form</h2>\r\n        <form [formGroup]=\"applicationForm\" (ngSubmit)=\"apply()\">\r\n\r\n\r\n                <div class=\"form-group\">\r\n                  <label>applicantName</label>\r\n                  <input type=\"text\" formControlName=\"applicantName\" class=\"form-control\" readonly />\r\n                </div>\r\n\r\n\r\n               \r\n\r\n                  <div class=\"form-group\">\r\n                      <label>Applicant Mail</label>\r\n                      <input type=\"text\" formControlName=\"applicantMail\" class=\"form-control\" readonly />\r\n                      \r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label>Patient Name</label>\r\n                    <input type=\"text\" formControlName=\"patientName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.patientName.errors }\" />\r\n                    <div *ngIf=\"submitted && r.patientName.errors\" class=\"invalid-feedback\">\r\n                        <div *ngIf=\"r.patientName.errors.required\">patientName is required</div>\r\n                        <div *ngIf=\"r.patientName.errors.minlength\">patientName must be at least 6 characters</div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                      <label>D.no/Street</label>\r\n                      <input type=\"text\" formControlName=\"address\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.address.errors }\" />\r\n                      <div *ngIf=\"submitted && r.address.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"r.address.errors.required\">address is required</div>\r\n                      </div>\r\n                    </div>\r\n                   \r\n    \r\n                    <div class=\"form-group\">\r\n                        <label>City</label>\r\n                        <input type=\"text\" formControlName=\"city\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.city.errors }\" />\r\n                        <div *ngIf=\"submitted && r.city.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"r.city.errors.required\">city is required</div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>District</label>\r\n                        <input type=\"text\" formControlName=\"district\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.district.errors }\" />\r\n                        <div *ngIf=\"submitted && r.district.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"r.district.errors.required\">district is required</div>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>State</label>\r\n                        <input type=\"text\" formControlName=\"state\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.state.errors }\" />\r\n                        <div *ngIf=\"submitted && r.state.errors\" class=\"invalid-feedback\">\r\n                            <div *ngIf=\"r.state.errors.required\">State is required</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                    <div class=\"form-group\">\r\n                      <label>Mobile</label>\r\n                      <input type=\"text\" formControlName=\"mobile\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.mobile.errors }\" />\r\n                      <div *ngIf=\"submitted && r.mobile.errors\" class=\"invalid-feedback\">\r\n                          <div *ngIf=\"r.mobile.errors.required\">Mobile Number is required</div>\r\n                          <div *ngIf=\"r.mobile.errors.minlength\">Mobile Number must contain 10 characters</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    \r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>&nbsp;\r\n                <br/> <br/>\r\n\r\n              \r\n              </form>\r\n              <h6>Upload Supporting Document</h6>\r\n              <input accept=\".png,.jpg,.jpeg\" type=\"file\" (change)=\"onFileChanged($event)\" required>\r\n              <span *ngIf=\"imageUploded\" style=\"color: green;\">Uploaded &#10003;</span>\r\n\r\n              <span id=\"imageerror\" style=\"color: red;\"></span><br/> <br/>\r\n              <button class=\"btn btn-success\" (click)=\"onUpload()\" value=\"upload\">upload</button>\r\n             \r\n            </div>\r\n   \r\n    <div  *ngIf=\"checkStatus\" class=\"checkStatus\">\r\n        <br/>\r\n        <h3>Welcome {{user.firstName}}</h3>\r\n        <h4 style=\"text-align: center;\">My Applications</h4>\r\n\r\n        <h5>Open Applications</h5>\r\n        <table class=\"application\">\r\n            <tr >\r\n                <th>Applicant</th>\r\n                <th>Email</th>\r\n                <th>Patient</th>\r\n                <th>Address</th>\r\n                <th>Contact</th>\r\n                <th>Status</th>\r\n                <th>Progress</th>\r\n                <th>Applied on</th>\r\n                <th>Approved on</th>\r\n                <th>LastUpdate</th>\r\n                <th>Delivery Initiated</th>\r\n                <th>Document</th>\r\n                <th>Modify</th>\r\n            </tr>\r\n            <tr *ngFor=\"let a of applications\">\r\n                <td *ngIf=\"a.status\">{{a.applicantName}}</td>\r\n                <td *ngIf=\"a.status\">{{a.applicantMail}}</td>\r\n                <td *ngIf=\"a.status\">{{a.patientName}}</td>\r\n                <td *ngIf=\"a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\r\n                \r\n                <td *ngIf=\"a.status\">{{a.mobile}}</td>\r\n                <td *ngIf=\"a.status\">{{a.status}}</td>\r\n                <td *ngIf=\"a.status\">{{a.waitingWith}}</td>\r\n                <td *ngIf=\"a.status\">{{a.appliedOn}}</td>\r\n                <td *ngIf=\"a.status\">{{a.approvedOn}}</td>\r\n                <td *ngIf=\"a.status\">{{a.lastUpdate}}</td>\r\n                <td *ngIf=\"a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\r\n                <td *ngIf=\"a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\r\n                <td *ngIf=\"a.status\"><button (click)=\"cancel(a)\" class=\"btn btn-danger\">Close</button></td>\r\n            </tr>\r\n            \r\n        </table>\r\n            <br/><br/>\r\n            <h5>Closed Applications</h5>\r\n        <table class=\"application\">\r\n            <tr >\r\n                <th>Applicant</th>\r\n                <th>Email</th>\r\n                <th>Patient</th>\r\n                <th>Address</th>\r\n                <th>Contact</th>\r\n                <th>Status</th>\r\n                <th>Progress</th>\r\n                <th>Applied on</th>\r\n                <th>Approved on</th>\r\n \r\n                <th>LastUpdate</th>\r\n                <th>Delivery Initiated</th>\r\n                <th>Document</th>\r\n                <th>Modify</th>\r\n            </tr>\r\n            <tr *ngFor=\"let a of applications\">\r\n                <td *ngIf=\"!a.status\">{{a.applicantName}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.applicantMail}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.patientName}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\r\n                \r\n                <td *ngIf=\"!a.status\">{{a.mobile}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.status}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.waitingWith}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.appliedOn}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.approvedOn}}</td>\r\n                <td *ngIf=\"!a.status\">{{a.lastUpdate}}</td>\r\n                <td *ngIf=\"!a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\r\n                <td *ngIf=\"!a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\r\n                <td *ngIf=\"!a.status\"><button (click)=\"revoke(a)\" class=\"btn btn-success\">Open Again</button></td>\r\n            </tr>\r\n            \r\n        </table>\r\n    </div>\r\n   \r\n    <div *ngIf=\"myDetails\" class=\"mydetails\">\r\n        <br/>\r\n        <h3>Welcome {{user.firstName}}</h3>\r\n        <h4 style=\"text-align: center;\">My Details</h4>\r\n        <table>\r\n            <tr>\r\n                <td>\r\n                    First Name \r\n                </td>\r\n                <td>\r\n                    {{user.firstName}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Last Name\r\n                </td>\r\n                <td>\r\n                    {{user.lastName}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Email \r\n                </td>\r\n                <td>\r\n                    {{user.email}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Number\r\n                </td>\r\n                <td>\r\n                    {{user.number}}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Old Password.\r\n                </td>\r\n                <td>\r\n                    <input type=\"password\" [(ngModel)]=\"oldPassword\"><br>\r\n                    <button  class=\"btn btn-success\" (click)=\"validate()\">Validate</button> <br>\r\n                    <span *ngIf=\"passwordValid\" style=\"color: green;\">Success &#10003;</span>\r\n                    \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    New Password.\r\n                </td>\r\n                <td>\r\n                    <input type=\"password\" [(ngModel)]=\"newpassword\">\r\n                     \r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td>\r\n                    Re-Enter New Password.\r\n                </td>\r\n                <td>\r\n                    <input type=\"password\" [(ngModel)]=\"newpassword2\"><br>\r\n                    <button class=\"btn btn-success\" (click)=\"changePassword()\">Change</button> \r\n                </td>\r\n            </tr>\r\n            \r\n        </table>\r\n        \r\n    </div>\r\n\r\n            \r\n       \r\n                      \r\n        <!-- <button class=\"button-info\">Apply</button><br/><br/>\r\n        <button class=\"button-info\">Check Status</button><br/><br/>\r\n        <button class=\"button-info\" >My Details</button><br/><br/>\r\n        <button class=\"button-danger\" (click)=\"logout()\">Log Out</button> \r\n        <table>\r\n            <tr>\r\n                <th> Menu</th>\r\n            </tr>\r\n            <tr>\r\n                <td (click)=\"showForm()\">\r\n                    <a >Apply</a>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td (click)=\"myApplications()\">\r\n                    <a>Check Status</a>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td (click)=\"myAccount()\" >\r\n                    <a>My Details</a>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td  (click)=\"logout()\"id=\"logout\">\r\n                    <a>Log Out</a>\r\n                </td>\r\n            </tr>\r\n        </table> -->\r\n    </div>\r\n    \r\n        \r\n      \r\n\r\n\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'O2Suppliers';\n\n \n}\n","<div class=\"hometitle\">\n<hr/>\n<h2>HOME OXYGEN EQUIPMENT SERVICE</h2>\n\n</div>\n<router-outlet></router-outlet>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  uploadImage(uploadImageData: FormData) {\n    return this.http.post<any>(this.baseUrl+'/upload', uploadImageData)\n  }\n  private baseUrl=\"http://localhost:8001/api/users/image\";\n  getImage(id: any) {\n    return this.http.get(this.baseUrl+\"/get/\"+id)\n  }\n\n  constructor(private http:HttpClient) { }\n}\n","\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { SlideshowComponent } from './slideshow/slideshow.component';\nimport { LoginComponent } from './login/login.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { UserDashBoardComponent } from './user-dash-board/user-dash-board.component';\nimport { DoctorDashBoardComponent } from './doctor-dash-board/doctor-dash-board.component';\nimport { AdminDashBoardComponent } from './admin-dash-board/admin-dash-board.component';\nimport { SuppliersDashBoardComponent } from './suppliers-dash-board/suppliers-dash-board.component';\nimport { ImageViewerComponent } from './image-viewer/image-viewer.component';\nimport { DoctorloginComponent } from './doctorlogin/doctorlogin.component';\nimport { SupplierloginComponent } from './supplierlogin/supplierlogin.component'\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    SlideshowComponent,\n    LoginComponent,\n    UserDashBoardComponent,\n    DoctorDashBoardComponent,\n    AdminDashBoardComponent,\n    SuppliersDashBoardComponent,\n    ImageViewerComponent,\n    DoctorloginComponent,\n    SupplierloginComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n   \n    \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<!-- \n    My account.\n    can view assigned orders.\n    accpect/cancel order.\n    forward status to patient for delivery.\n -->\n\n \n <div class=\"nav-menu\">\n    <a class=\"success-link\" (click)=\"waitingApplications()\">Applications</a>\n    <a class=\"success-link\" (click)=\"myAccount()\">My Details</a>\n    <a class=\"danger-link\" (click)=\"logout()\">Log Out</a>\n   \n  </div>\n\n <div class=\"dashboard\">\n    \n   <div *ngIf=\"checkStatus\"  class=\"checkStatus\">\n       <br/>\n       <h3>Welcome {{supplier.firstName}}</h3>\n       <h4 style=\"text-align: center;\">Applications</h4>\n\n       <h5>Waiting For Approval</h5>\n       <table *ngIf=\"applications!=undefined\"class=\"application\">\n           <tr >\n               <th>Applicant</th>\n               <th>Email</th>\n               <th>Patient</th>\n               <th>Address</th>\n               <th>Contact</th>\n               \n               <th>Progress</th>\n               <th>Emergency</th>\n               <th>Approved Doctor</th>\n               <th>Applied on</th>\n               <th>Approved on</th>\n               <th>LastUpdate</th>\n               <th>Delivery Initiated</th>\n               <th>Document</th>\n               <th>Delivery</th>\n           </tr>\n           <tr *ngFor=\"let a of applications\">\n               <td *ngIf=\"a.status\">{{a.applicantName}}</td>\n               <td *ngIf=\"a.status\">{{a.applicantMail}}</td>\n               <td *ngIf=\"a.status\">{{a.patientName}}</td>\n               <td *ngIf=\"a.status\">{{a.address}},<br/>{{a.city}},<br/>{{a.district}},<br/>{{a.state}}.</td>\n               \n               <td *ngIf=\"a.status\">{{a.mobile}}</td>\n               \n               <td *ngIf=\"a.status\">{{a.waitingWith}}</td>\n               <td *ngIf=\"a.status\">{{a.emergency}}</td>\n               <td *ngIf=\"a.status\">{{a.approvedBy}}</td>\n               <td *ngIf=\"a.status\">{{a.appliedOn}}</td>\n               <td *ngIf=\"a.status\">{{a.approvedOn}}</td>\n               <td *ngIf=\"a.status\">{{a.lastUpdate}}</td>\n               <td *ngIf=\"a.status\"><b *ngIf=\"a.deliveryinitiated\">Yes</b><b *ngIf=\"!a.deliveryinitiated\">No</b></td>\n               \n               <td *ngIf=\"a.status\" (click)=\"getImage(a.imageId)\"><u>document</u></td>\n               <td *ngIf=\"a.status\"><button (click)=\"approveDelivery(a)\" class=\"btn btn-success\">Approve</button></td>\n           </tr>\n           \n       </table>\n         \n   </div>\n  \n   <div *ngIf=\"myDetails\" class=\"mydetails\">\n       <br/>\n       <h3>Welcome {{supplier.firstName}}</h3>\n       <h4 style=\"text-align: center;\">My Details</h4>\n       <table>\n           <tr>\n               <td>\n                   First Name \n               </td>\n               <td>\n                   {{supplier.firstName}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Last Name\n               </td>\n               <td>\n                   {{supplier.lastName}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Email \n               </td>\n               <td>\n                   {{supplier.email}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Number\n               </td>\n               <td>\n                   {{supplier.number}}\n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Old Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"oldPassword\"><br>\n                   <button  class=\"btn btn-success\" (click)=\"validate()\">Validate</button> <br>\n                   <span *ngIf=\"passwordValid\" style=\"color: green;\">Success &#10003;</span>\n                   \n               </td>\n           </tr>\n           <tr>\n               <td>\n                   New Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"newpassword\">\n                    \n               </td>\n           </tr>\n           <tr>\n               <td>\n                   Re-Enter New Password.\n               </td>\n               <td>\n                   <input type=\"password\" [(ngModel)]=\"newpassword2\"><br>\n                   <button class=\"btn btn-success\" (click)=\"changePassword()\">Change</button> \n               </td>\n           </tr>\n           \n       </table>\n       \n   </div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApplicationForm } from 'src/model/application-form';\nimport { SupplierDetails } from 'src/model/supplier-details';\nimport { ApplicationFromService } from 'src/services/application-from.service';\nimport { ImageService } from 'src/services/image.service';\nimport { O2SupplierService } from 'src/services/o2-supplier.service';\n\n@Component({\n  selector: 'app-suppliers-dash-board',\n  templateUrl: './suppliers-dash-board.component.html',\n  styleUrls: ['./suppliers-dash-board.component.css']\n})\nexport class SuppliersDashBoardComponent implements OnInit {\n\n \n  supplier:SupplierDetails\n  applications:ApplicationForm[]\n  oldPassword: any;\n  passwordValid:boolean=false;\n  newpassword:any;\n  newpassword2:any;\n  checkStatus:boolean=true;\n  myDetails:boolean=false;\n  selectedFile: File;\n  retrievedImage: any;\n  base64Data: any;\n  retrieveResonse: any;\n  imageUploded: boolean=false;\n  imageName: any;\n  constructor( private supplierService:O2SupplierService,\n    private formService:ApplicationFromService,\n    private router:Router,\n    private imageService:ImageService) { }\n\n  ngOnInit(): void {\n    if(this.supplierService.asupplier==undefined)\n    this.router.navigate([''])\n    this.supplier=this.supplierService.asupplier\n    this.getApplications();\n  }\n  getApplications() {\n    this.formService.getApplicationsWithSupplier().subscribe(data=>{\n      this.applications=data\n    },err=>{\n      alert(err.name)\n    });\n  }\n  \n\n  logout(){\n    this.supplierService.asupplier=undefined\n    this.router.navigate([''])\n  }\n  myAccount(){\n    this.checkStatus=false;\n    this.myDetails=true;\n \n  }\n  waitingApplications(){\n    this.checkStatus=true;\n    this.myDetails=false;\n \n  }\n  validate(){\n    this.supplierService.validatepassword(this.oldPassword).subscribe(data=>{\n        if(data)\n        this.passwordValid=true;\n        else\n        alert(\"Please enter a valid Password\")\n    });\n  }\n changePassword(){\n   if(!this.passwordValid){\n      alert(\"Please validate your Password\")\n      return;\n   }\n   console.log(this.newpassword2==this.newpassword)\n   console.log(this.newpassword2===this.newpassword)\n   if(!(this.newpassword===this.newpassword2)){\n      alert(\"Passwords Did not match\")\n      return;\n   }\n   this.supplierService.asupplier.password=this.newpassword;\n   this.supplierService.changePassword().subscribe(data=>{\n     alert(\" Password Succesfully Changed\")\n     this.newpassword=\"\"\n     this.newpassword2=\"\"\n     this.oldPassword=\"\"\n     this.passwordValid=false;\n   });\n }\n     //Gets called when the user clicks on retieve image button to get the image from back end\n     getImage(id:any) {\n      //Make a call to Sprinf Boot to get the Image Bytes.\n      \n        this.imageService.getImage(id).subscribe(\n          res => {\n            this.retrieveResonse = res;\n            this.base64Data = this.retrieveResonse.picByte;\n            this.retrievedImage = 'data:image/jpeg;base64,' + this.base64Data;\n             window.sessionStorage.setItem(\"image\",this.retrievedImage);\n             window.open(\"http://localhost:4200/view-document\",\"_blank\");\n          }\n        );\n    }\n    approveDelivery(form:ApplicationForm){\n      this.formService.approveDelivery(form).subscribe(data=>{\n        this.applications=data\n      })\n    }\n    \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  styleUrls: ['./image-viewer.component.css']\n})\nexport class ImageViewerComponent implements OnInit {\n\n  constructor(private userService:UserService,\n    private router:Router) { }\n  image:any;\n  ngOnInit(): void {\n    \n    this.image=window.sessionStorage.getItem('image')\n   if(this.image==undefined)\n    this.router.navigate([''])\n  }\n\n}\n","<img [src]=\"image\" >","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminDashBoardComponent } from './admin-dash-board/admin-dash-board.component';\nimport { DoctorDashBoardComponent } from './doctor-dash-board/doctor-dash-board.component';\nimport { HomeComponent } from './home/home.component';\nimport { ImageViewerComponent } from './image-viewer/image-viewer.component';\nimport { SuppliersDashBoardComponent } from './suppliers-dash-board/suppliers-dash-board.component';\nimport { UserDashBoardComponent } from './user-dash-board/user-dash-board.component';\n\nconst routes: Routes = [\n \n  {\n    path:'userdashboard',\n    component:UserDashBoardComponent,\n    pathMatch:'full'\n  },\n  {\n    path:'suppliersdashboard',\n    component:SuppliersDashBoardComponent,\n    pathMatch:'full'\n  },\n  {\n    path:'admindashboard',\n    component:AdminDashBoardComponent,\n    pathMatch:'full'\n  },\n  {\n    path:'doctordashboard',\n    component:DoctorDashBoardComponent,\n    pathMatch:'full'\n  },\n  {\n    path:'view-document',\n    component:ImageViewerComponent,\n    pathMatch:'full'\n  },\n  {\n    path:'',\n    component:HomeComponent,\n    pathMatch:'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserDetails } from 'src/model/user-details';\nimport { UserService } from 'src/services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit \n{\n  admin:boolean=false;\n  showModal: boolean=true;\n  loginForm: FormGroup;\n  registerForm : FormGroup\n   submitted = false; \n   tLoginRegister = false;\n   log: string;\n   validate= true;\n  user: UserDetails;\n \n \n   constructor(private formBuilder: FormBuilder,\n     private router : Router,\n      private userService:UserService,) \n      { }\n   show()\n   {\n     this.showModal = true; \n   }\n   Logout(){\n\n     this.log = undefined\n   }\n \n \n   toggleLoginRegister(){\n    \n    if(window.sessionStorage.getItem(\"role\")==\"admin\"){\n     this.admin=true;\n     alert(\"Registration for admin is Disabled contact your administrator\")\n     return;\n    }\n    else{\n      this.admin=false;\n    }\n     if(this.tLoginRegister==false){  \n       this.tLoginRegister = true;\n     }else{\n       this.tLoginRegister=false;\n     }\n  }\n \n   //Bootstrap Modal Close event\n   hide()\n   {\n     if(this.tLoginRegister==true)\n     this.toggleLoginRegister()\n    if(window.sessionStorage.getItem(\"role\")==\"admin\"){\n      this.admin=false;\n      \n     }\n     \n\n    document.getElementById(\"loginForm\").style.display=\"none\";\n   }\n   ngOnInit() {\n    this.showModal=true;\n    \n     this.registerForm = this.formBuilder.group({\n     \n       firstName: ['', [Validators.required, Validators.minLength(6)]],\n       lastName: ['', [Validators.required, Validators.minLength(6)]],\n       role:[],\n       email: ['', [Validators.required, Validators.email]],\n       password: ['', [Validators.required, Validators.minLength(4)]],\n       number: ['', [Validators.required, Validators.minLength(10),Validators.maxLength(10),Validators.pattern(\"^[0-9]*$\"),]]\n     });\n \n     this.loginForm = this.formBuilder.group({\n       \n      \n       email: ['admin@admin.com', [Validators.required, Validators.email]],\n       password: ['admin', [Validators.required, Validators.minLength(4)]],\n       role:[],\n       \n     });\n }\n\n // convenience getter for easy access to form fields\n get f() { return this.loginForm.controls; }\n get r() { return this.registerForm.controls; }\n onSubmit() {\n     this.submitted = true;\n     if (this.loginForm.invalid) {\n       return;\n     }   \n     this.user=this.loginForm.value;\n     this.user.role=window.sessionStorage.getItem(\"role\");\n    \n     this.userService.validateUser(this.user).subscribe(data=>{\n      \n      if(data!=null)\n      {\n        this.hide();\n        this.userService.auser=data;\n        if(this.user.role===\"user\")\n        this.router.navigate(['/userdashboard'])\n    else if(this.user.role===\"admin\")\n        this.router.navigate(['/admindashboard'])\n   else if(this.user.role===\"supplier\")\n       this.router.navigate(['/supplierdashboard'])\n   else if(this.user.role===\"doctor\")\n     this.router.navigate(['/doctordashboard'])\n      }\n      else{\n        document.getElementById(\"login\").innerHTML=\"<p color='red'> Invalid Credentials</p>\"\n      }\n     },err=>{\n       alert(err.name)\n     })\n    \n     \n    \n     \n }\n \n \n \n onRegister(){\n \n   this.submitted = true;\n     // stop here if form is invalid\n     if (this.registerForm.invalid) {\n         return;\n     }\n     \n     if(this.submitted)\n     {\n       this.showModal = false;\n     }\n    this.user=this.registerForm.value\n    this.user.role=window.sessionStorage.getItem(\"role\");\n    this.userService.registerUser(this.user).subscribe(data=>{\n      \n      if(data)\n      this.toggleLoginRegister();\n    },err=>{\n      alert(err.name)\n    });\n  } \n \n \n}\n\n","<div class=\"loginrow\">\n    <div class=\"logincol1\">\n\n    </div>\n    <div class=\"logincol2\">\n     <div class=\"modal-header\">\n        <div class=\"modal-dialog\">\n            \n        <div  *ngIf=\"tLoginRegister == false\"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">               <div class=\"modal-content\">\n               \n                <div class=\"modal-header\">\n                 \n                  <h4 class=\"modal-title\" id=\"myModalLabel\">Login</h4>\n                 \n                </div>\n                <div class=\"modal-body\">\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                        <div class=\"form-group\">\n                          \n                          <span style=\"color: red;\"id=\"login\"></span>\n                            <label>Email</label>\n                            <input type=\"text\" formControlName=\"email\" class=\"form-control\" autofocus=\"true\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                                <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                                \n                            </div>\n                            <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Email</span>\n                        </div>\n                        \n                        \n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                            <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                                <div *ngIf=\"f.password.errors.minlength\">Password must be at least 6 characters</div>\n                                \n                              </div>\n                              <span *ngIf=\"!validate\" style=\"color: red;\">Invalid Password</span>\n                          </div>\n                          \n                      <div class=\"form-group form-check\">\n                        <label class=\"form-check-label\">\n                          <input class=\"form-check-input\" type=\"checkbox\" name=\"remember\"> Remember me\n                        </label>\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-primary\">Submit</button> &nbsp;\n                      <button *ngIf=\"!admin\" (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Register</button>&nbsp;\n                      <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                    \n                    </form>\n                   \n                </div>\n              </div>\n            </div>\n           </div>\n                <div *ngIf=\"tLoginRegister == true \"  class=\"modal-content\"   tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"height: auto;\">\n                    \n                    <div class=\"modal-dialog\">\n                    \n                      <div class=\"modal-content\">\n                    <div class=\"modal-header\">\n                      <h4 class=\"modal-title\" id=\"myModalLabel\">Register</h4>\n                    </div>\n                    <div class=\"modal-body\">\n                        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\n        \n        \n                          <div class=\"form-group\">\n                            <label>FirstName</label>\n                            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" autofocus=\"true\" [ngClass]=\"{ 'is-invalid': submitted && r.firstName.errors }\" />\n                            <div *ngIf=\"submitted && r.firstName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.firstName.errors.required\">firstName is required</div>\n                                <div *ngIf=\"r.firstName.errors.minlength\">firstName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                          <div class=\"form-group\">\n                            <label>LastName</label>\n                            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.lastName.errors }\" />\n                            <div *ngIf=\"submitted && r.lastName.errors\" class=\"invalid-feedback\">\n                                <div *ngIf=\"r.lastName.errors.required\">lastName is required</div>\n                                <div *ngIf=\"r.lastName.errors.minlength\">lastName must be at least 6 characters</div>\n                            </div>\n                          </div>\n        \n        \n                            <div class=\"form-group\">\n                                <label>Email</label>\n                                <input type=\"text\" formControlName=\"email\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.email.errors }\" />\n                                <div *ngIf=\"submitted && r.email.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.email.errors.required\">Email is required</div>\n                                    <div *ngIf=\"r.email.errors.email\">Email must be a valid email address</div>\n                                </div>\n                            </div>\n                            <div class=\"form-group\">\n                                <label>Password</label>\n                                <input type=\"password\" formControlName=\"password\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.password.errors }\" />\n                                <div *ngIf=\"submitted && r.password.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.password.errors.required\">Password is required</div>\n                                    <div *ngIf=\"r.password.errors.minlength\">Password must be at least 6 characters</div>\n                                </div>\n                              </div>\n        \n                              <div class=\"form-group\">\n                                <label>PhoneNumber</label>\n                                <input type=\"tel\" formControlName=\"number\" class=\"form-control\" [ngClass]=\"{ 'is-invalid': submitted && r.number.errors }\" />\n                                <div *ngIf=\"submitted && r.number.errors\" class=\"invalid-feedback\">\n                                    <div *ngIf=\"r.number.errors.required\">phoneNumber is required</div>\n                                    <div *ngIf=\"r.number.errors.minlength\">phoneNumber must contain 10 characters</div>\n                                </div>\n                              </div>\n                          \n                          <button type=\"submit\" class=\"btn btn-primary\">Submit</button>&nbsp;\n                          <button (click) = \"toggleLoginRegister()\" class=\"btn btn-primary\">Login</button> &nbsp;\n                          <button type=\"button\" class=\"btn btn-danger\"  (click) = \"hide()\">Close</button>\n                        </form>\n                        \n                  </div>\n                </div>\n                \n              </div>\n                   \n      </div>\n     \n    </div>\n    </div>\n    <div class=\"logincol3\">\n        \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-slideshow',\n  templateUrl: './slideshow.component.html',\n  styleUrls: ['./slideshow.component.css']\n})\nexport class SlideshowComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"carouselExampleIndicators\" class=\"carousel slide\" data-ride=\"carousel\">\n    <ol class=\"carousel-indicators\">\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n      <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"3\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div class=\"carousel-item active\">\n        <img class=\"d-block w-100\" src=\"../../assets/images/slider1.jpg\"  height=\"500px\" alt=\"First slide\">\n      </div>\n      <div class=\"carousel-item\">\n        <img class=\"d-block w-100\" src=\"../../assets/images/slider2.jpg\" height=\"500px\"  alt=\"Second slide\">\n      </div>\n      <div class=\"carousel-item\">\n        <img class=\"d-block w-100\" src=\"../../assets/images/slider3.jpg\"height=\"500px\"  alt=\"Third slide\">\n      </div>\n      <div class=\"carousel-item\">\n        <img class=\"d-block w-100\" src=\"../../assets/images/slider4.jpg\"height=\"500px\"  alt=\"Third slide\">\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\">Next</span>\n    </a>\n  </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}